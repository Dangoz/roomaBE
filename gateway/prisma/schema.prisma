// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String      @id @default(uuid())
  email          String      @unique
  name           String
  age            String?
  phone          String?
  pronouns       String?
  occupation     String?
  preference     String[]
  interests      String?
  pfp            String?
  color          String      @default("white")
  password       String?
  points         Int         @default(0)
  assignedPoints Int         @default(0)
  roomId         String?
  Room           Room?       @relation(fields: [roomId], references: [id])
  assignedTasks  User_Task[]
  completions    Record[]

  @@map("user")
}

model Room {
  id          String  @id @default(uuid())
  name        String
  description String  @default("")
  users       User[]
  events      Event[]
  tasks       Task[]

  @@map("room")
}

model Event {
  id          String   @id @default(uuid())
  title       String
  description String   @default("")
  color       String
  startAt     DateTime
  endAt       DateTime
  roomId      String
  Room        Room     @relation(fields: [roomId], references: [id])

  @@map("event")
}

model Task {
  id            String      @id @default(uuid())
  title         String
  points        Int
  days          Int[]
  startAt       DateTime
  roomId        String
  Room          Room        @relation(fields: [roomId], references: [id])
  assignedUsers User_Task[]
  records       Record[]

  @@map("task")
}

model Record {
  id     String   @id @default(uuid())
  taskId String
  Task   Task     @relation(fields: [taskId], references: [id])
  userId String
  User   User     @relation(fields: [userId], references: [id])
  date   DateTime

  @@unique([taskId, userId, date])
  @@map("record")
}

model User_Task {
  id     String @id @default(uuid())
  userId String
  User   User   @relation(fields: [userId], references: [id])
  taskId String
  Task   Task   @relation(fields: [taskId], references: [id])

  @@map("user_task")
}
